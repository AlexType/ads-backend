require('dotenv').config();
const mongoose = require('mongoose');
const User = require('../src/models/User.model');
const Blogger = require('../src/models/Blogger.model');
const Campaign = require('../src/models/Campaign.model');
const Order = require('../src/models/Order.model');
const SocialAccount = require('../src/models/SocialAccount.model');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testUsers = [
  // –ë–ª–æ–≥–µ—Ä—ã
  { 
    email: 'blogger1@test.com', 
    password: 'Test123!Pass', 
    firstName: '–ú–∞—Ä–∏—è', 
    lastName: '–ò–≤–∞–Ω–æ–≤–∞', 
    role: 'blogger',
    phone: '+79001234567'
  },
  { 
    email: 'blogger2@test.com', 
    password: 'Test123!Pass', 
    firstName: '–ê–ª–µ–∫—Å–µ–π', 
    lastName: '–ü–µ—Ç—Ä–æ–≤', 
    role: 'blogger',
    phone: '+79001234568'
  },
  { 
    email: 'blogger3@test.com', 
    password: 'Test123!Pass', 
    firstName: '–ï–ª–µ–Ω–∞', 
    lastName: '–°–º–∏—Ä–Ω–æ–≤–∞', 
    role: 'blogger',
    phone: '+79001234569'
  },
  
  // –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–∏
  { 
    email: 'advertiser1@test.com', 
    password: 'Test123!Pass', 
    firstName: '–î–º–∏—Ç—Ä–∏–π', 
    lastName: '–ö–æ–∑–ª–æ–≤', 
    role: 'advertiser',
    company: 'Brand Agency',
    phone: '+79001234570'
  },
  { 
    email: 'advertiser2@test.com', 
    password: 'Test123!Pass', 
    firstName: '–û–ª—å–≥–∞', 
    lastName: '–ù–æ–≤–∏–∫–æ–≤–∞', 
    role: 'advertiser',
    company: 'Marketing Pro',
    phone: '+79001234571'
  },
];

const seedDatabase = async () => {
  try {
    const mongoURI = process.env.MONGODB_URI;
    
    if (!mongoURI) {
      console.error('‚ùå MONGODB_URI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env');
      process.exit(1);
    }

    await mongoose.connect(mongoURI);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB\n');

    // –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    await User.deleteMany({ email: { $ne: 'bryzgalov@example.com' } });
    await Blogger.deleteMany({});
    await Campaign.deleteMany({});
    await Order.deleteMany({});
    await SocialAccount.deleteMany({});
    console.log('‚úÖ –ë–∞–∑–∞ –æ—á–∏—â–µ–Ω–∞\n');

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const users = await User.insertMany(testUsers);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n`);

    // –û—Ç–¥–µ–ª—è–µ–º –±–ª–æ–≥–µ—Ä–æ–≤ –∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π
    const bloggers = users.filter(u => u.role === 'blogger');
    const advertisers = users.filter(u => u.role === 'advertiser');

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –±–ª–æ–≥–µ—Ä–æ–≤
    console.log('üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π –±–ª–æ–≥–µ—Ä–æ–≤...');
    const bloggerProfiles = [
      {
        userId: bloggers[0]._id,
        categories: ['lifestyle', 'fashion'],
        languages: ['ru'],
        audienceStats: {
          totalFollowers: 125000,
          avgViews: 80000,
          avgEngagement: 12000
        },
        engagement: {
          engagementRate: 8.5,
          avgLikes: 8500,
          avgComments: 320
        },
        pricing: {
          post: 5000,
          story: 2000,
          reel: 8000,
          video: 15000
        },
        rating: 4.8,
        totalOrders: 25,
        completedOrders: 23,
        availabilityStatus: 'available'
      },
      {
        userId: bloggers[1]._id,
        categories: ['tech', 'gaming'],
        languages: ['ru', 'en'],
        audienceStats: {
          totalFollowers: 85000,
          avgViews: 60000,
          avgEngagement: 9000
        },
        engagement: {
          engagementRate: 9.2,
          avgLikes: 7200,
          avgComments: 450
        },
        pricing: {
          post: 4000,
          story: 1500,
          reel: 7000,
          video: 12000
        },
        rating: 4.6,
        totalOrders: 18,
        completedOrders: 17,
        availabilityStatus: 'available'
      },
      {
        userId: bloggers[2]._id,
        categories: ['food', 'travel'],
        languages: ['ru'],
        audienceStats: {
          totalFollowers: 200000,
          avgViews: 150000,
          avgEngagement: 20000
        },
        engagement: {
          engagementRate: 7.5,
          avgLikes: 12000,
          avgComments: 280
        },
        pricing: {
          post: 8000,
          story: 3000,
          reel: 12000,
          video: 25000
        },
        rating: 4.9,
        totalOrders: 45,
        completedOrders: 42,
        availabilityStatus: 'available'
      }
    ];

    const createdBloggers = await Blogger.insertMany(bloggerProfiles);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdBloggers.length} –ø—Ä–æ—Ñ–∏–ª–µ–π –±–ª–æ–≥–µ—Ä–æ–≤\n`);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    console.log('üì± –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...');
    const socialAccounts = [
      {
        bloggerId: createdBloggers[0]._id,
        platform: 'vk',
        username: 'maria_ivanova',
        profileUrl: 'https://vk.com/maria_ivanova',
        followers: 125000,
        posts: 450,
        verified: true
      },
      {
        bloggerId: createdBloggers[0]._id,
        platform: 'telegram',
        username: '@maria_lifestyle',
        followers: 80000,
        posts: 320,
        verified: true
      },
      {
        bloggerId: createdBloggers[1]._id,
        platform: 'vk',
        username: 'alex_tech',
        profileUrl: 'https://vk.com/alex_tech',
        followers: 85000,
        posts: 380,
        verified: true
      },
      {
        bloggerId: createdBloggers[2]._id,
        platform: 'vk',
        username: 'elena_food',
        profileUrl: 'https://vk.com/elena_food',
        followers: 200000,
        posts: 650,
        verified: true
      }
    ];

    await SocialAccount.insertMany(socialAccounts);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${socialAccounts.length} —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n`);

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–π
    console.log('üì¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–π...');
    const campaigns = [
      {
        advertiserId: advertisers[0]._id,
        title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        description: '–ù—É–∂–Ω—ã –±–ª–æ–≥–µ—Ä—ã –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤–µ—Å–µ–Ω–Ω–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 2025',
        campaignType: 'product',
        status: 'active',
        budget: {
          total: 300000,
          allocated: 0,
          perBlogger: 15000
        },
        targetAudience: {
          ageRange: { min: 18, max: 35 },
          gender: 'all',
          interests: ['fashion', 'lifestyle'],
          locations: ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥']
        },
        requirements: {
          platforms: ['vk', 'telegram'],
          contentType: ['post', 'reel'],
          minFollowers: 50000,
          minEngagementRate: 5.0
        },
        startDate: new Date(),
        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)
      },
      {
        advertiserId: advertisers[1]._id,
        title: '–†–µ–∫–ª–∞–º–∞ –∏–≥—Ä–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
        description: '–ü–æ–∏—Å–∫ –≥–µ–π–º–µ—Ä–æ–≤-–±–ª–æ–≥–µ—Ä–æ–≤ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã –Ω–æ–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
        campaignType: 'product',
        status: 'active',
        budget: {
          total: 200000,
          allocated: 0,
          perBlogger: 10000
        },
        targetAudience: {
          ageRange: { min: 18, max: 30 },
          gender: 'all',
          interests: ['gaming', 'tech'],
          locations: ['–ú–æ—Å–∫–≤–∞']
        },
        requirements: {
          platforms: ['vk'],
          contentType: ['post', 'video'],
          minFollowers: 30000,
          minEngagementRate: 7.0
        },
        startDate: new Date(),
        endDate: new Date(Date.now() + 20 * 24 * 60 * 60 * 1000)
      }
    ];

    const createdCampaigns = await Campaign.insertMany(campaigns);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdCampaigns.length} –∫–∞–º–ø–∞–Ω–∏–π\n`);

    // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...');
    const orders = [
      {
        campaignId: createdCampaigns[0]._id,
        bloggerId: bloggers[0]._id,
        advertiserId: advertisers[0]._id,
        contentType: 'post',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –æ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        requirements: '–ú–∏–Ω–∏–º—É–º 3 —Ñ–æ—Ç–æ, –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        price: 5000,
        status: 'pending',
        deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000)
      },
      {
        campaignId: createdCampaigns[0]._id,
        bloggerId: bloggers[2]._id,
        advertiserId: advertisers[0]._id,
        contentType: 'reel',
        description: '–°–æ–∑–¥–∞–Ω–∏–µ reels –æ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        requirements: '–ö–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –≤–µ—â–µ–π',
        price: 8000,
        status: 'accepted',
        deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000)
      },
      {
        campaignId: createdCampaigns[1]._id,
        bloggerId: bloggers[1]._id,
        advertiserId: advertisers[1]._id,
        contentType: 'post',
        description: '–û–±–∑–æ—Ä –∏–≥—Ä–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã',
        requirements: '–î–µ—Ç–∞–ª—å–Ω—ã–π –æ–±–∑–æ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞',
        price: 10000,
        status: 'completed',
        deadline: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
        paidAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000)
      }
    ];

    await Order.insertMany(orders);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${orders.length} –∑–∞–∫–∞–∑–æ–≤\n`);

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
    console.log('\nüìä –ò—Ç–æ–≥–∏:');
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    console.log(`üé® –ü—Ä–æ—Ñ–∏–ª–µ–π –±–ª–æ–≥–µ—Ä–æ–≤: ${createdBloggers.length}`);
    console.log(`üì± –°–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: ${socialAccounts.length}`);
    console.log(`üì¢ –ö–∞–º–ø–∞–Ω–∏–π: ${createdCampaigns.length}`);
    console.log(`üìã –ó–∞–∫–∞–∑–æ–≤: ${orders.length}`);
    
    console.log('\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:');
    console.log('\nüìù –†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–∏:');
    console.log('   advertiser1@test.com / Test123!Pass');
    console.log('   advertiser2@test.com / Test123!Pass');
    console.log('\nüë®‚Äçüíº –ë–ª–æ–≥–µ—Ä—ã:');
    console.log('   blogger1@test.com / Test123!Pass');
    console.log('   blogger2@test.com / Test123!Pass');
    console.log('   blogger3@test.com / Test123!Pass');
    console.log('\nüë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (—Å–æ–∑–¥–∞–Ω —Ä–∞–Ω–µ–µ):');
    console.log('   bryzgalov@example.com / TestPass123!');

    await mongoose.connection.close();
    console.log('\n‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    await mongoose.connection.close();
    process.exit(1);
  }
};

seedDatabase();


