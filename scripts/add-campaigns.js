require('dotenv').config();
const mongoose = require('mongoose');
const Campaign = require('../src/models/Campaign.model');
const User = require('../src/models/User.model');

mongoose.connect(process.env.MONGODB_URI)
  .then(() => console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB'))
  .catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err);
    process.exit(1);
  });

async function addCampaigns() {
  try {
    // –ù–∞–π–¥–µ–º –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—è
    const advertiser = await User.findOne({ role: 'advertiser' });
    
    if (!advertiser) {
      console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª—å. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
      process.exit(1);
    }

    console.log(`üì¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è ${advertiser.email}...`);

    const campaigns = [
      {
        advertiserId: advertiser._id,
        title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤–µ—Å–µ–Ω–Ω–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ 2025',
        description: '–ò—â–µ–º –±–ª–æ–≥–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –æ–¥–µ–∂–¥—ã. –ù—É–∂–Ω—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç.',
        campaignType: 'product',
        status: 'active',
        budget: {
          total: 300000,
          allocated: 50000,
          spent: 0
        },
        targetAudience: {
          ageRange: { min: 18, max: 35 },
          gender: 'all',
          interests: ['fashion', 'lifestyle', 'beauty'],
          locations: ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥']
        },
        requirements: {
          platforms: ['vk', 'telegram'],
          contentType: ['post', 'reel'],
          minFollowers: 50000,
          minEngagementRate: 5.0
        },
        startDate: new Date(),
        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),
        categories: ['fashion', 'lifestyle']
      },
      {
        advertiserId: advertiser._id,
        title: '–†–µ–∫–ª–∞–º–∞ —Ñ–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        description: '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã –±–ª–æ–≥–µ—Ä—ã –≤ –Ω–∏—à–µ –∑–¥–æ—Ä–æ–≤—å—è –∏ —Ñ–∏—Ç–Ω–µ—Å–∞ –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.',
        campaignType: 'product',
        status: 'active',
        budget: {
          total: 150000,
          allocated: 0,
          spent: 0
        },
        targetAudience: {
          ageRange: { min: 20, max: 40 },
          gender: 'all',
          interests: ['fitness', 'health', 'sport'],
          locations: ['–†–æ—Å—Å–∏—è']
        },
        requirements: {
          platforms: ['vk', 'telegram', 'youtube'],
          contentType: ['post', 'video', 'story'],
          minFollowers: 30000,
          minEngagementRate: 6.0
        },
        startDate: new Date(),
        endDate: new Date(Date.now() + 45 * 24 * 60 * 60 * 1000),
        categories: ['fitness', 'health']
      },
      {
        advertiserId: advertiser._id,
        title: '–ó–∞–ø—É—Å–∫ –æ–Ω–ª–∞–π–Ω-—à–∫–æ–ª—ã',
        description: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã. –ò—â–µ–º –±–ª–æ–≥–µ—Ä–æ–≤ —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π—Å—è –æ–±—É—á–µ–Ω–∏–µ–º.',
        campaignType: 'product',
        status: 'paused',
        budget: {
          total: 250000,
          allocated: 100000,
          spent: 75000
        },
        targetAudience: {
          ageRange: { min: 22, max: 45 },
          gender: 'all',
          interests: ['education', 'self-development', 'business'],
          locations: ['–ú–æ—Å–∫–≤–∞']
        },
        requirements: {
          platforms: ['vk', 'telegram'],
          contentType: ['post', 'video'],
          minFollowers: 40000,
          minEngagementRate: 5.5
        },
        startDate: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
        endDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000),
        categories: ['education', 'business']
      },
      {
        advertiserId: advertiser._id,
        title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—Ä–µ–Ω–¥–∞',
        description: '–ú–∞—Å—à—Ç–∞–±–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–π –∫–æ—Å–º–µ—Ç–∏–∫–∏. –ù—É–∂–Ω—ã beauty-–±–ª–æ–≥–µ—Ä—ã.',
        campaignType: 'product',
        status: 'active',
        budget: {
          total: 500000,
          allocated: 200000,
          spent: 150000
        },
        targetAudience: {
          ageRange: { min: 18, max: 40 },
          gender: 'female',
          interests: ['beauty', 'cosmetics', 'skincare'],
          locations: ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä']
        },
        requirements: {
          platforms: ['vk', 'telegram'],
          contentType: ['post', 'reel'],
          minFollowers: 70000,
          minEngagementRate: 7.0
        },
        startDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
        endDate: new Date(Date.now() + 35 * 24 * 60 * 60 * 1000),
        categories: ['beauty', 'cosmetics']
      },
      {
        advertiserId: advertiser._id,
        title: '–ß–µ—Ä–Ω–æ–≤–∏–∫: –ù–æ–≤–æ–≥–æ–¥–Ω—è—è –∫–∞–º–ø–∞–Ω–∏—è 2025',
        description: '–ü–ª–∞–Ω –∫–∞–º–ø–∞–Ω–∏–∏ –Ω–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏',
        campaignType: 'product',
        status: 'draft',
        budget: {
          total: 400000,
          allocated: 0,
          spent: 0
        },
        targetAudience: {
          ageRange: { min: 18, max: 50 },
          gender: 'all',
          interests: ['holiday', 'celebration', 'gifts'],
          locations: ['–†–æ—Å—Å–∏—è']
        },
        requirements: {
          platforms: ['vk'],
          contentType: ['post'],
          minFollowers: 25000,
          minEngagementRate: 4.0
        },
        startDate: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000),
        endDate: new Date(Date.now() + 120 * 24 * 60 * 60 * 1000),
        categories: ['holiday', 'seasonal']
      }
    ];

    const createdCampaigns = await Campaign.insertMany(campaigns);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${createdCampaigns.length} –∫–∞–º–ø–∞–Ω–∏–π\n`);

    console.log('üìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:');
    createdCampaigns.forEach(camp => {
      console.log(`   - ${camp.title} (${camp.status})`);
    });

    console.log('\nüéâ –ö–∞–º–ø–∞–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!');
    
    await mongoose.connection.close();
    console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    await mongoose.connection.close();
    process.exit(1);
  }
}

addCampaigns();

